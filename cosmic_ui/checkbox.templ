package cosmic_ui

import (
  "fmt"
  "strconv"
)

type CheckboxArguments struct {
  Data string
  ID string
  Label string
  Value string
  OnChange string
  CheckboxHeight int
  CheckboxWidth int
}

func (ctx CheckboxArguments) GetViewBox() string {
  return fmt.Sprintf("0 0 %v %v", ctx.GetWidth(), ctx.GetHeight())
}

func (ctx CheckboxArguments) GetHeight() string {
  if ctx.CheckboxHeight < 1 {
    ctx.CheckboxHeight = 200
  }
  return strconv.FormatInt(int64(ctx.CheckboxHeight), 10)
}

func (ctx CheckboxArguments) GetWidth() string {
  if ctx.CheckboxWidth < 1 {
    ctx.CheckboxWidth = 200
  }
  return strconv.FormatInt(int64(ctx.CheckboxWidth), 10)
}

templ CheckboxStyle() {
  @templ.Raw(`
  <style type="text/css">
    .checkbox-wrapper input[type="checkbox"] {
      display: none;
    }

    .checkbox-wrapper .terms-label {
      cursor: pointer;
      display: flex;
      align-items: center;
    }

    .checkbox-wrapper .terms-label .label-text {
      margin-left: 10px;
    }

    .checkbox-wrapper .checkbox-svg {
      width: 30px;
      height: 30px;
    }

    .checkbox-wrapper .checkbox-box {
      fill: rgba(207, 205, 205, 0.425);
      stroke: #3aa856;
      stroke-dasharray: 800;
      stroke-dashoffset: 800;
      transition: stroke-dashoffset 0.6s ease-in;
    }

    .checkbox-wrapper .checkbox-tick {
      stroke: #3aa856;
      stroke-dasharray: 172;
      stroke-dashoffset: 172;
      transition: stroke-dashoffset 0.6s ease-in;
    }

    .checkbox-wrapper input[type="checkbox"]:checked + .terms-label .checkbox-box,
      .checkbox-wrapper input[type="checkbox"]:checked + .terms-label .checkbox-tick {
      stroke-dashoffset: 0;
    }
  </style>
  `)
}

templ Checkbox(args CheckboxArguments) {
  <div 
  if len(args.Data) > 0 {
    x-data={args.Data}
  } class="checkbox-wrapper">
    <input :id={args.ID} :name={args.ID} type="checkbox" :value={args.Value} @change={args.OnChange} />
    <label class="terms-label" :for={args.ID}>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox={args.GetViewBox()} class="checkbox-svg">
        <mask fill="white" id="path-1-inside-1_476_5-37">
          <rect height={args.GetHeight()} width={args.GetWidth()}></rect>
        </mask>
        <rect mask="url(#path-1-inside-1_476_5-37)" stroke-width="40" class="checkbox-box" height={args.GetHeight()} width={args.GetWidth()}></rect>
        <path stroke-width="15" d="M52 111.018L76.9867 136L149 64" class="checkbox-tick"></path>
      </svg>
      <span class="label-text" x-text={args.Label}></span>
    </label>
  </div>
  
}